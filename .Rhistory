totals_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_totals.html")
advanced_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_advanced.html")
#Set the length of the tables that we are scraping from
totals_len<-length(totals_url)
advanced_len<-length(advanced_url)
#Initialize both the totals and advanced tables
totals_table <- readHTMLTable(totals_url[1])[[1]]
totals_table$year <- 1950
advanced_table <- readHTMLTable(advanced_url[1])[[1]]
advanced_table$year <- 1950
#Appending data example
for (i in 2:totals_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(url[i])[[1]]
temp_table$year <- i + 1949
totals_table<-rbind(totals_table,temp_table)
}
dim(readHTMLTable(url[1])[[1]]
)
dim(readHTMLTable(url[2])[[1]])
head(readHTMLTable(url[2])[[1]])
#Load the XML Library
library(XML)
###### URLs
url<-paste0("http://www.basketball-reference.com/players/",letters,"/")
#Set the years from which data is available
years <- 1950:2014
#Set the urls for the data we want
totals_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_totals.html")
advanced_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_advanced.html")
#Set the length of the tables that we are scraping from
totals_len<-length(totals_url)
advanced_len<-length(advanced_url)
#Initialize both the totals and advanced tables
totals_table <- readHTMLTable(totals_url[1])[[1]]
totals_table$year <- 1950
advanced_table <- readHTMLTable(advanced_url[1])[[1]]
advanced_table$year <- 1950
#Appending data example
for (i in 2:totals_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(totals_url[i])[[1]]
temp_table$year <- i + 1949
totals_table<-rbind(totals_table,temp_table)
}
dim(totals_table)
#Load the XML Library
library(XML)
###### URLs
url<-paste0("http://www.basketball-reference.com/players/",letters,"/")
#Set the years from which data is available
years <- 1950:2014
#Set the urls for the data we want
totals_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_totals.html")
advanced_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_advanced.html")
#Set the length of the tables that we are scraping from
totals_len<-length(totals_url)
advanced_len<-length(advanced_url)
#Initialize both the totals and advanced tables
totals_table <- readHTMLTable(totals_url[1])[[1]]
totals_table$year <- 1950
advanced_table <- readHTMLTable(advanced_url[1])[[1]]
advanced_table$year <- 1950
#Append together all of the totals data
for (i in 2:totals_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(totals_url[i])[[1]]
temp_table$year <- i + 1949
totals_table<-rbind(totals_table,temp_table)
}
#Append together all of the advanced data
for (i in 2:advanced_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(advanced_url[i])[[1]]
temp_table$year <- i + 1949
advanced_table<-rbind(advanced_table,temp_table)
}
advanced_table
sim(advanced_table)
dim(advanced_table)
dim(totals_table)
names(advanced_table)
table(advanced_table$years)
table(advanced_table$year)
hist(
advanced_table#year)
advanced_table$year
names(totals_table_)
names(totals_table)
names(advanced_table)
?merge
typeof(advanced_totals)
typeof(advanced_totals)
typeof(advanced_table)
names(advanced_table)
merge(advanced_table, totals_table, by= c("Player", "Tm", "year"))
all_table <- merge(advanced_table, totals_table, by= c("Player", "Tm", "year"))
all_table <- merge(advanced_table, totals_table, by= c("Player", "Tm", "year"), all=FALSE)
dim(all_table)
head(all_table)
all_table[1:100,]
all_table[38000:,]
all_table[38000:,]
all_table[38000:38515,]
all_table <- merge(totals_table, advanced_table, by= c("Player", "Tm", "year", "Rk", "Pos", "Age", "G", "MP"), all=FALSE)
?cbinf
?cbind
all_table <- cbind(totals_table, advanced_table)
head(all_table)
?subset
subset(all_table[Player== "Curly Armstrong",])
names(all_table)
table(year)
table(all_table$year)
subset(all_table, all_table[,2] != all_table[,32])
all_table$Player.1
head(all_Table)
head(all_table)
?head
tail(all_table)
all_table <- cbind(totals_table, advanced_table)
length(subset(all_table, Player != "Player"))
subset(all_table, Player == "Player")
dim(subset(all_table, Player != "Player"))
dim(subset(all_table, Player == "Player"))
all_table <- subset(cbind(totals_table, advanced_table), Player != "Player")
all_table
all_table[1:100,]
all_table[1:100,]
all_table <- as.data.frame(subset(cbind(totals_table, advanced_table), Player != "Player"))
typeof(all_table)
getwd()
setwd("C:/Users/leeri_000//basketball_stats//game_simulation")
getwd()
write.csv(all_table, file = "data/all_data")
write.csv(all_table, file = "data/all_data.csv")
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
head(all_seasons)
subset(all_seasons, Year==2014 & Tm == "LAL")
subset(all_seasons, year==2014 & Tm == "LAL")
#Read in all of the functions that will be needed for the game
source("functions/teams.R")
source("functions/two_point_shot.R")
source("functions/determine_event.R")
source("functions/determine_player.R")
source("functions/free_throw.R")
source("functions/rebound.R")
source("functions/three_point_shot.R")
source("functions/possession.R")
source("functions/determine_rebounder.R")
#Read in the input data which sets the parameters for the game
team1 <- lakers_input
team2 <- heat_input
#Generate home and away team's rebounding percentages
team1_oreb <- sum(team1[,"indv_orb"])
team1_dreb <- sum(team1[,"indv_drb"])
team2_oreb <- sum(team2[,"indv_orb"])
team2_dreb <- sum(team2[,"indv_drb"])
#Initialize the Box Score to all 0's
box_score <- as.data.frame(matrix(0, nrow=9, ncol=10))
#Name the data frame that will be collecting all of the results
colnames(box_score) <- c("team1_1", "team1_2", "team1_3", "team1_4", "team1_5",
"team2_1", "team2_2", "team2_3", "team2_4", "team2_5")
rownames(box_score) <- c("2M", "2A", "3M", "3A", "FTM", "FTA", "TO", "OREB", "DREB")
#Determine the number of possessions
num_pos <- 90
#Simulate Home Team's Possessions
for(i in 1:num_pos) {
#Set the team and team name (for the box score iteration) in the Global Environment
team <- team1
team_name <- "team1"
#The Start of the possession triggers from determining which player will use the possession
#Determine which Player will use the possession based on Individual Usage Rates
determine_player(team[1,"usage"], team[2,"usage"], team[3,"usage"], team[4,"usage"], team[5,"usage"])
}
#Simulate Away Team's Possessions
for(i in 1:num_pos) {
#Set the team and team name (for the box score iteration) in the Global Environment
team <- team2
team_name <- "team2"
#Determine which Player will use the possession based on Individual Usage Rates
determine_player(team2[1,"usage"], team2[2,"usage"], team2[3,"usage"], team2[4,"usage"], team2[5,"usage"])
}
box_score
team1_input
team1
head(all_seasons)
?sample
team1
lakers
source("functions/teams.R")
lakers_ordered
str(lakers_input)
str(determine_player)
x <- c(2.1, 4.2, 3.3, 5.4)
x
order(x)
head(all_table)
head(all_seasons)
letters
a <- matrix(1:9, nrow = 3)
str(a)
typeof(a)
a
str(a)
rm(all_table)
str(season_2013)
str(all_seasons)
df <- data.frame(x = rep(1:3, each = 2), y = 6:1, z = letters[1:6])
df
table(all_seaons$year)
table(all_seasons$year)
all_seasons[,year == 2014]
all_seasons[,all_seaons$year == 2014]
all_seasons[,all_seasons$year == 2014]
all_seasons[,"year" == 2014]
all_seasons$year
all_seasons[,all_seasons$year == 2014]
all_seasons[,year]
all_seasons[,"year"]
all_seasons[,"year" == 2014]
all_seasons[,"year" == "2014"]
subset(all_seasons, year == 2014)
dim(subset(all_seasons, year == 2014))
?subset
dim(subset(all_seasons, year == 2014 & team == "HOU"))
dim(subset(all_seasons, year == 2014 & Tm == "HOU"))
subset(all_seasons, year == 2014 & Tm == "HOU")
all_table <- as.data.frame(subset(cbind(totals_table, advanced_table), Player != "Player"))
names(all_table)
?grep
all_table_revised <- all_table[,-match(".1", names(all_table))]
all_table_revised <- all_table[,-match("*.1", names(all_table))]
grepl( ".1" , names(all_table))
all_table_revised <- all_table[,grepl(".1", names(all_table))]
all_table_revised <- all_table[,!grepl(".1", names(all_table))]
str(all_table_revised_
str(all_table_revised)
all_table_revised <- all_table[,!grepl(".1", names(all_table))]
#Write the polished data frame to a CSV
write.csv(all_table, file = "data/all_data.csv")
#Load all of the Necesary Packages
require(plyr)
#Read in the Dataset with all of the individual Player Data
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
head(all_seasons$year)
typeof(all_seasons$year)
subset(all_seasons, year == 2014 & Tm == "LAL")
#Load the XML Library
library(XML)
###### URLs
url<-paste0("http://www.basketball-reference.com/players/",letters,"/")
#Set the years from which data is available
years <- 1950:2014
#Set the urls for the data we want
totals_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_totals.html")
advanced_url <- paste0("http://www.basketball-reference.com/leagues/NBA_", years, "_advanced.html")
#Set the length of the tables that we are scraping from
totals_len<-length(totals_url)
advanced_len<-length(advanced_url)
#Initialize both the totals and advanced tables
totals_table <- readHTMLTable(totals_url[1])[[1]]
totals_table$year <- 1950
advanced_table <- readHTMLTable(advanced_url[1])[[1]]
advanced_table$year <- 1950
#Append together all of the totals data
for (i in 2:totals_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(totals_url[i])[[1]]
temp_table$year <- i + 1949
totals_table<-rbind(totals_table,temp_table)
}
#Append together all of the advanced data
for (i in 2:advanced_len) {
#Create a temporary table, and then append on a variable that contains the year
temp_table <- readHTMLTable(advanced_url[i])[[1]]
temp_table$year <- i + 1949
advanced_table<-rbind(advanced_table,temp_table)
}
#Combine the output of these two tables, and get rid of the default rows which don't
all_table <- as.data.frame(subset(cbind(totals_table, advanced_table), Player != "Player"))
all_table_revised <- all_table[,!grepl(".1", names(all_table))]
#Write the polished data frame to a CSV
write.csv(all_table, file = "data/all_data.csv")
#Load all of the Necesary Packages
require(plyr)
#Read in the Dataset with all of the individual Player Data
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
season_2013 <- read.csv("data/2013_season.csv", header=TRUE)
attach(season_2013)
write.csv(all_table_revised, file = "data/all_data.csv")
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
names(all_seasons)
table(all_seasons$Pos)
names(all_seasons)
all_seasons$MPG <- all_seasons$MP/all_seasons$G
hist(all_seasons$MPG)
max(all_seasons$MPG)
max(all_seasons$MPG, na.rm=TRUE)
subset(all_seasons, MPG > 48)
names(all_seasons)
all_seasons$total_pos <- all_seasons$X3PA + all_seasons$X2PA + .44*all_seasons$FTA + all_seasons$TOV
all_seasons$three_dist <- all_seasons$X3PA/all_seasons$total_pos
all_seasons$two_dist <- all_seasons$X2PA/all_seasons$total_pos
all_seasons$ft_dist <- .44*all_seasons$FTA/all_seasons$total_pos
all_seasons$tov_dist <- all_seasons$TOV/all_seasons$total_pos
hist(all_seasons$total_pos)
hist(all_seasons$three_dist)
hist(all_seasons$two_dist)
hist(all_seasons$ft_dist)
hist(all_seasons$tov_dist)
all_seasons <- rename(season_2013, replace=c("X3P."= "three_perc",
"X2P."= "two_perc","FT."= "ft_perc",
"DRB."="indv_drb","ORB."= "indv_orb", "USG."="usage"))
names(all_seasons)
#Load all of the Necesary Packages
require(plyr)
#Read in the Dataset with all of the individual Player Data
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
season_2013 <- read.csv("data/2013_season.csv", header=TRUE)
#Create the Minutes Per Game Variable
all_seasons$MPG <- all_seasons$MP/all_seasons$G
#Create individual Player Offensive distributions
all_seasons$total_pos <- all_seasons$X3PA + all_seasons$X2PA + .44*all_seasons$FTA + all_seasons$TOV
all_seasons$three_dist <- all_seasons$X3PA/all_seasons$total_pos
all_seasons$two_dist <- all_seasons$X2PA/all_seasons$total_pos
all_seasons$ft_dist <- .44*all_seasons$FTA/all_seasons$total_pos
all_seasons$tov_dist <- all_seasons$TOV/all_seasons$total_pos
all_seasons <- rename(all_seasons, replace=c("X3P."= "three_perc",
"X2P."= "two_perc","FT."= "ft_perc",
"DRB."="indv_drb","ORB."= "indv_orb", "USG."="usage"))
#Create individual Player Offensive distributions
#total_pos <- X3PA + X2PA + .44*FTA + TOV
#three_dist <- X3PA/total_pos
#two_dist <- X2PA/total_pos
#ft_dist <- .44*FTA/total_pos
#tov_dist <- TOV/total_pos
#season_2013 <- cbind(season_2013, total_pos, three_dist, two_dist, ft_dist, tov_dist)
#season_2013 <- rename(season_2013, replace=c("X3P."= "three_perc",
#                                             "X2P."= "two_perc","FT."= "ft_perc",
#                                             "DRB."="indv_drb","ORB."= "indv_orb", "USG."="usage"))
names(all_seasons)
hist(all_seasons$DRtg)
hist(all_seasons$ORtg)
tail(all_seasons)
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB."]
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB."]
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB."]
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB.")]
df
names(df)
tail(all_seasons)
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB.", "AST.", "STL.", "BLK.", "TOV.", "usage")]
head(df)
for(i in names(df)){
df[[i]] <- df[[i]]/100
}
tail(df)
for(i in names(df)){
all_seasons[[i]] <- all_seasons[[i]]/100
}
tail(all_seasons)
?sample
lakers <- subset(all_seasons, Tm == "LAL")
lakers
dim(lakers)
lakers <- subset(all_seasons, Tm == "LAL" & year == 2014)
lakers
hist(lakers$MPG)
hist(lakers$minutes)
hist(lakers$MP)
lakers <- subset(all_seasons, Tm == "LAL" & year == 2014 & MP >= 500)
head(lakers)
lakers
lakers[order(lakers$MP)]
lakers <- subset(all_seasons, Tm == "LAL" & year == 2014 & MP >= 500)
lakers <- subset(all_seasons, Tm == team1 & year == year & MP >= 500)
lakers <- subset(all_seasons, Tm == team1 & year == year & MP >= 500)
lakers <- subset(all_seasons, Tm == team1 & year == year & MP >= 500)
team1 <- "LAL"
team2 <- "MIA"
year <- 2013
lakers <- subset(all_seasons, Tm == team1 & year == year & MP >= 500)
lakers
dim
dim(lakers)
year_of_game <- 2013
lakers <- subset(all_seasons, Tm == team1 & year == year_of_game & MP >= 500)
lakers
totals_mins <- sum(lakers$MPG)
totals_mins
totals_min <- sum(lakers$MPG)
rm(totals_mins)
team1$possession_probability <- team1$MPG/totals_min
team1 <- subset(all_seasons, Tm == team1 & year == year_of_game & MP >= 500)
team1
totals_min <- sum(team1$MPG)
team1$possession_probability <- team1$MPG/totals_min
team1
sum(team1$possession_probability)
?sample
possession_five <- sample(team1, 5, prob=team1$possession_probability)
possession_probability <- team1$MPG/totals_min
possession_five <- sample(team1, 5, prob=possession_probability)
team1
possession_five <- sample(team1, 5, prob=team1$possession_probability)
possession_five <- sample(team1, size=5)
possession_five
possession_five <- sample(team1, size=2)
possession_five
possession_five <- all_seasons[sample(team1, size=5),]
possession_five <- team1[sample(nrow(team1), size=5),]
possession_five)
possession_five
possession_five <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
possession_five
team1 <- "LAL"
team2 <- "MIA"
year_of_game <- 2013
team1 <- subset(all_seasons, Tm == team1 & year == year_of_game & MP >= 500)
totals_min <- sum(team1$MPG)
team1$possession_probability <- team1$MPG/totals_min
possession_five_team1 <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
team2 <- subset(all_seasons, Tm == team2 & year == year_of_game & MP >= 500)
totals_min <- sum(team2$MPG)
team2$possession_probability <- team2$MPG/totals_min
possession_five_team2 <- team2[sample(nrow(team2), size=5, prob=team2$possession_probability),]
possession_five_team2
possession_five_team2 <- team2[sample(nrow(team2), size=5, prob=team2$possession_probability),]
possession_five_team2
#Load all of the Necesary Packages
require(plyr)
#Read in the Dataset with all of the individual Player Data
all_seasons <- read.csv("data/all_data.csv", header=TRUE)
season_2013 <- read.csv("data/2013_season.csv", header=TRUE)
#Create the Minutes Per Game Variable
all_seasons$MPG <- all_seasons$MP/all_seasons$G
#Create individual Player Offensive distributions
all_seasons$total_pos <- all_seasons$X3PA + all_seasons$X2PA + .44*all_seasons$FTA + all_seasons$TOV
all_seasons$three_dist <- all_seasons$X3PA/all_seasons$total_pos
all_seasons$two_dist <- all_seasons$X2PA/all_seasons$total_pos
all_seasons$ft_dist <- .44*all_seasons$FTA/all_seasons$total_pos
all_seasons$tov_dist <- all_seasons$TOV/all_seasons$total_pos
all_seasons <- rename(all_seasons, replace=c("X3P."= "three_perc",
"X2P."= "two_perc","FT."= "ft_perc",
"DRB."="indv_drb","ORB."= "indv_orb", "USG."="usage"))
#Scale the Oreb, Dreb, and Usage rate percentages to one
#season_2013[,"indv_orb"] = season_2013[,"indv_orb"]/100
#season_2013[,"indv_drb"] = season_2013[,"indv_drb"]/100
#season_2013[,"usage"] = season_2013[,"usage"]/100
#Create individual Player Offensive distributions
#total_pos <- X3PA + X2PA + .44*FTA + TOV
#three_dist <- X3PA/total_pos
#two_dist <- X2PA/total_pos
#ft_dist <- .44*FTA/total_pos
#tov_dist <- TOV/total_pos
#season_2013 <- cbind(season_2013, total_pos, three_dist, two_dist, ft_dist, tov_dist)
#season_2013 <- rename(season_2013, replace=c("X3P."= "three_perc",
#                                             "X2P."= "two_perc","FT."= "ft_perc",
#                                             "DRB."="indv_drb","ORB."= "indv_orb", "USG."="usage"))
#Scale the Oreb, Dreb, and Usage rate Percentages by 100
#season_2013[,"indv_orb"] = season_2013[,"indv_orb"]/100
#season_2013[,"indv_drb"] = season_2013[,"indv_drb"]/100
#season_2013[,"usage"] = season_2013[,"usage"]/100
#Grab the names of the variables to scale, and then scale them by 100
df <- all_seasons[,c("indv_orb", "indv_drb", "TRB.", "AST.", "STL.", "BLK.", "TOV.", "usage")]
for(i in names(df)){
all_seasons[[i]] <- all_seasons[[i]]/100
}
#Create a team that represents the 2014 Lakers and 2014 Heat
team1 <- "LAL"
team2 <- "MIA"
year_of_game <- 2013
team1 <- subset(all_seasons, Tm == team1 & year == year_of_game & MP >= 500)
totals_min <- sum(team1$MPG)
team1$possession_probability <- team1$MPG/totals_min
possession_five_team1 <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
team2 <- subset(all_seasons, Tm == team2 & year == year_of_game & MP >= 500)
totals_min <- sum(team2$MPG)
team2$possession_probability <- team2$MPG/totals_min
possession_five_team2 <- team2[sample(nrow(team2), size=5, prob=team2$possession_probability),]
possession_five_team1
possession_five_team2
team1 <- subset(all_seasons, Tm == team1 & year == year_of_game & MP >= 500)
totals_min <- sum(team1$MPG)
team1$possession_probability <- team1$MPG/totals_min
possession_five_team1 <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
team2 <- subset(all_seasons, Tm == team2 & year == year_of_game & MP >= 500)
totals_min <- sum(team2$MPG)
team2$possession_probability <- team2$MPG/totals_min
possession_five_team2 <- team2[sample(nrow(team2), size=5, prob=team2$possession_probability),]
possession_five_team1 <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
possession_five_team1
possession_five_team1 <- team1[sample(nrow(team1), size=5, prob=team1$possession_probability),]
possession_five_team1
#Load the XML Library
library(XML)
http://stats-for-the-nba.appspot.com/ratings/1991.html
years <- 1991:2013
#Set the urls for the data we want
url <- paste0("http://stats-for-the-nba.appspot.com/ratings/", years,".html")
#Load the XML Library
library(XML)
#Set the years for which the Website has data
years <- 1991:2013
#Set the urls for the data we want
url <- paste0("http://stats-for-the-nba.appspot.com/ratings/", years,".html")
url
len<-length(url)
len
tab <- readHTMLTable(url[1])[[1]]
tab
